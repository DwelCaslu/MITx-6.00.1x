
def closest_power(base, num):
    '''
    base: base of the exponential, integer > 1
    num: number you want to be closest to, integer > 0
    Find the integer exponent such that base**exponent is closest to num.
    Note that the base**exponent may be either greater or smaller than num.
    In case of a tie, return the smaller value.
    Returns the exponent.
    '''
    # Your code here
    #base=int(base)
    #num = int(num)
    exp = 0
    if num-base**exp < base:
       if abs((num-base**(exp+1)))<abs((num-base**exp)):
           exp+=1
    else:
        while (num-base**exp)>base:
            exp+=1
        if abs((num-base**(exp)))==abs((num-base**(exp-1))):
            exp-=1
    #print(exp)        
    return exp

#closest_power(16, 136.0)


def dotProduct(listA, listB):
    '''
    listA: a list of numbers
    listB: a list of numbers of the same length as listA
    '''
    sum = 0
    for i in range(len(listA)):
        sum = sum +listA[i]*listB[i]
    #print(sum)
    return sum
    

listA = [1, 2, 3]
listB = [4, 5, 6]
dotProduct(listA, listB)